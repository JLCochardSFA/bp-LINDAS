PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ex: <http://schema.example.org/>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX schema: <http://schema.org/>
PREFIX fluxShape: <https://ld.flux.zazuko.com/shapes/metadata/>
PREFIX flux: <https://ld.flux.zazuko.com/>
PREFIX fluxSchema: <https://flux.described.at/>
PREFIX k8s: <https://k8s.described.at/>
PREFIX oci: <https://oci.described.at/>
PREFIX dms: <https://schema.ld.admin.ch/datamngt#>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX cube-meta: <https://cube.link/meta/>
PREFIX ld-schema: <https://schema.ld.admin.ch/>

# blueprint classes LINDAS

flux:NamedGraph a fluxShape:ClassMetadataShape;
	rdfs:label "Named Graph";
	rdfs:comment "Named graphs identified in the LINDAS database";
	fluxSchema:faIcon "fa-solid fa-warehouse";
	fluxSchema:colorIndex 1;
	fluxSchema:searchPrio 3;
	sh:targetNode dms:NamedGraph.
	
flux:Dataset a fluxShape:ClassMetadataShape;
	rdfs:label "Dataset";
	rdfs:comment "General datasets contained in the LINDAS database";
	fluxSchema:faIcon "fa-solid fa-table";
	fluxSchema:colorIndex 2;
	fluxSchema:searchPrio 3;
	sh:targetNode dms:Dataset.
	
flux:Vocabulary a fluxShape:ClassMetadataShape;
	rdfs:label "Vocabulary";
	rdfs:comment "Vocabulary datasets contained in the LINDAS database";
	fluxSchema:faIcon "fa-solid fa-table-list";
	fluxSchema:colorIndex 2;
	fluxSchema:searchPrio 3;
	sh:targetNode dms:Vocabulary.
	
# Maybe not needed
#flux:SharedDimension a fluxShape:ClassMetadataShape;
#	rdfs:label "Shared Vocabulary";
#	rdfs:comment "Vocabulary datasets contained in the LINDAS database that is defined as a shared dimension in cube structure";
#	fluxSchema:faIcon "fa-solid fa-table-list";
#	fluxSchema:colorIndex 4;
#	fluxSchema:searchPrio 3;
#	sh:targetNode dms:SharedDimension.
	
flux:Cube a fluxShape:ClassMetadataShape;
	rdfs:label "Cube";
	rdfs:comment "Cube datasets contained in the LINDAS database";
	fluxSchema:faIcon "fa-solid fa-cube";
	fluxSchema:colorIndex 2;
	fluxSchema:searchPrio 3;
	sh:targetNode dms:Cube.	

flux:UndefinedDataset a fluxShape:ClassMetadataShape;
	rdfs:label "No Dataset";
	rdfs:comment "Datasets that are not documented";
	fluxSchema:faIcon "fa-solid fa-square";
	fluxSchema:colorIndex 9;
	fluxSchema:searchPrio 3;
	sh:targetNode dms:UndefinedDataset.
	
#flux:CubesRoot a fluxShape:ClassMetadataShape;
#	rdfs:label "Cubes Root";
#	rdfs:comment "A virtual dataset bringing together versions of datasets.";
#	fluxSchema:faIcon "fa-solid fa-folder";
#	fluxSchema:colorIndex 2;
#	fluxSchema:searchPrio 3;
#	sh:targetNode dms:CubesRoot.
	
flux:GovernmentOrganization a fluxShape:ClassMetadataShape;
	rdfs:label "Gov Unit";
	rdfs:comment "Government Organization part of LINDAS Ecosystem";
	fluxSchema:faIcon "fa-solid fa-building-columns";
	fluxSchema:colorIndex 3;
	fluxSchema:searchPrio 3;
	sh:targetNode dms:BPGovernmentOrganization.
	
#flux:GovernmentOrganization a fluxShape:ClassMetadataShape;
#	rdfs:label "Gov Unit";
#	rdfs:comment "Government Organization part of LINDAS Ecosystem";
#	fluxSchema:faIcon "fa-solid fa-building-columns";
#	fluxSchema:colorIndex 3;
#	fluxSchema:searchPrio 3;
#	sh:targetNode ld-schema:ZefixOrganisation.
	
# fin blueprint classes LINDAS

# blueprint links LINDAS

#flux:NamedgraphToDatasetsLink a sh:PropertyShape, fluxSchema:Link;
#	sh:name "contains";
#	sh:path dms:containsDataset;
#	sh:targetClass dms:NamedGraph;
#	sh:class dms:CubesRoot.

flux:NamedgraphToCubeLink a sh:PropertyShape, fluxSchema:Link;
	sh:name "contains";
	sh:path dms:containsDataset;
	sh:targetClass dms:NamedGraph;
	sh:class dms:Cube.
	
flux:NamedgraphToDatasetLink a sh:PropertyShape, fluxSchema:Link;
	sh:name "contains";
	sh:path dms:containsDataset;
	sh:targetClass dms:NamedGraph;
	sh:class dms:Dataset.
	
flux:NamedgraphToVocabularyLink a sh:PropertyShape, fluxSchema:Link;
	sh:name "contains";
	sh:path dms:containsDataset;
	sh:targetClass dms:NamedGraph;
	sh:class dms:Vocabulary.
	
#flux:NamedgraphToCubeLink a sh:PropertyShape, fluxSchema:Link;
#	sh:name "contains";
#	sh:path dms:containsDataset;
#	sh:targetClass dms:NamedGraph;
#	sh:class dms:Cube.
	
flux:NamedgraphToUndefDatasetLink a sh:PropertyShape, fluxSchema:Link;
	sh:name "contains";
	sh:path dms:containsDataset;
	sh:targetClass dms:NamedGraph;
	sh:class dms:UndefinedDataset.
	
flux:NamedGraphToOrganizationLink a sh:PropertyShape, fluxSchema:Link;
	sh:name "has owner";
	sh:path dms:hasOwnerOrganization;
	sh:targetClass dms:NamedGraph;
	sh:class dms:BPGovernmentOrganization.
	
flux:VocabularyToCubeLink a sh:PropertyShape, fluxSchema:Link;
	sh:name "used in";
	sh:path dms:isUsedIn;
	sh:targetClass dms:Vocabulary;
	sh:class dms:Cube.
	
flux:DatasestToCubeLink a sh:PropertyShape, fluxSchema:Link;
	sh:name "has cube";
	sh:path dms:hasVersion;
	sh:targetClass dms:Dataset;
	sh:class dms:Cube.

#flux:CubesRootToDatasetVersionLink a sh:PropertyShape, fluxSchema:Link;
#	sh:name "has version";
#	sh:path dms:hasVersion;
#	sh:targetClass dms:CubesRoot;
#	sh:class dms:Cube.

# fin blueprint links LINDAS

# Benjamin Aggregate
# https://github.com/zazuko/blueprint/blob/main/doc/06_aggregate/00_introduction.md
# https://github.com/zazuko/blueprint/blob/main/doc/06_aggregate/01_configuration.md

## CubesRoot hierarchy
# Root - Namespace
flux:CubesRootHierarchyShape a sh:NodeShape , fluxSchema:ConnectionPoint ;
   rdfs:label "Dataset Root" ;     # Just a label shown in the UI
   sh:targetClass dms:CubesRoot ;         # The target class of the Shape - CubesRoot in our case
   sh:group flux:CubesRootTree ;          # The group of the Shape - the Tree
   sh:property [
       sh:name "Version" ;                           # A label show in the UI
       sh:path dms:hasVersion ;                      # the path to follow - no lists here, just a single path or single inverse path
       sh:node flux:CubeVersionHierarchyShape ;      # the next (level) shape in the hierarchy - Ingress
   ] .

# level 1 - Cube (the version)
flux:CubeVersionHierarchyShape a sh:NodeShape , fluxSchema:ConnectionPoint ;
   rdfs:label "Cube Version" ;
   sh:targetClass dms:Cube ;
   sh:group flux:CubesRootTree ;          # The group of the Shape - the Tree
   .

# All nodes of this tree are part of the same group
# This is used to reference the whole tree and add metadata to it
flux:CubesRootTree a sh:Group , fluxSchema:Hierarchy , fluxSchema:Composition ; # As you can see this is a Group, a Hierarchy and a Composition - Composition means it is composed of these things defined in the tree
   rdfs:label "Dataset Content" ;                # The name of this tree
   rdfs:comment "Information about the Dataset content" ; # a description of the tree
   fluxSchema:hasRoot flux:CubesRootHierarchyShape ;  # define the tree root shape
   .

#
## fin ---  NamedGraph CubesRoot hierarchy
## CubesRoot hierarchy
# Root - NamedGraph
flux:NamedgraphDatasetsHierarchyShape a sh:NodeShape ;
   rdfs:label "Named Graph" ;               # Just a label shown in the UI
   sh:targetClass dms:NamedGraph ;         # The target class of the Shape - CubesRoot in our case
   sh:group flux:NamedgraphDatasetsTree ;          # The group of the Shape - the Tree
   sh:property [
       sh:name "Cube Root" ;                           # A label show in the UI
       sh:path dms:containsDataset ;                      # the path to follow - no lists here, just a single path or single inverse path
       sh:node flux:NamedgraphCubesRootHierarchyShape ;      # the next (level) shape in the hierarchy - Ingress
   ] .

# level 1 - Cube (the version)
flux:NamedgraphCubesRootHierarchyShape a sh:NodeShape , fluxSchema:ConnectionPoint ;
   rdfs:label "Cube Root" ;
   sh:targetClass dms:CubesRoot ;
   sh:group flux:NamedgraphDatasetsTree ;          # The group of the Shape - the Tree
   .

# All nodes of this tree are part of the same group
# This is used to reference the whole tree and add metadata to it
flux:NamedgraphDatasetsTree a sh:Group , fluxSchema:Hierarchy , fluxSchema:Composition ; # As you can see this is a Group, a Hierarchy and a Composition - Composition means it is composed of these things defined in the tree
   rdfs:label "Named Graph" ;                # The name of this tree
   rdfs:comment "Information about the named graph content" ; # a description of the tree
   fluxSchema:hasRoot flux:NamedgraphDatasetsHierarchyShape ;  # define the tree root shape
   .

#
## fin ---  NamedGraph CubeRoot hierarchy

## this is needed for the tree to be displayed in the UI just once
fluxSchema:Aggregate a rdfs:Class ;
   rdfs:label "Aggregate" ;
   rdfs:comment "An aggregate is a collection of things, such as a list of items, a set of items, or a group of items." ;
   .
fluxSchema:Composition a rdfs:Class ;
   rdfs:subClassOf fluxSchema:Aggregate ;
   rdfs:label "Composition" ;
   rdfs:comment "A composition is a collection of things, that compose a higher level thing." ;
   .
fluxSchema:Container a rdfs:Class ;
   rdfs:subClassOf fluxSchema:Aggregate ;
   rdfs:label "Container" ;
   rdfs:comment "A container is a collection of things, that are contained in a another thing but it is not composed by them." ;
   .


#
#  Now we want to see the Datasete Root and the Vocabs used without the cube version node
flux:VacabularyToCubesRootTreeLink a fluxSchema:CompositionToNodeLink ;
   sh:targetClass flux:CubesRootTree ;           # the target class is the targetClass of the SHACL Shape - but the source of our link
   fluxSchema:target dms:Vocabulary ;               # this is the target of our link - the dms:Vocabulary
   rdfs:label "Used Vacabulary" ;             # a label we can show in the UI
   fluxSchema:inverseLabel "Vacabulary is Used in" ;       # if we see the link in the opposite direction we show this label
    # there is one inks between a CubesRootTree and an Vocabulary
   sh:property [
       sh:targetClass dms:Cube ;                         # the source of the link (connection point Cube)
       sh:path [
           sh:inversePath cube-meta:isUsedIn
       ] ;    # the path to follow to reach the target node (the Vacabulary)
       sh:class dms:Vocabulary ;                        # the target class of the instance on the other side of the link
   ] .



#
# CubesRoot  Gov Unit
flux:CubesRoottoGovernmentOrganizationTreeLink a fluxSchema:CompositionToNodeLink ;
   sh:targetClass flux:CubesRootTree ;           # the target class is the targetClass of the SHACL Shape - but the source of our link
   fluxSchema:target schema:BPGovernmentOrganization ;               # this is the target of our link - the dms:Vocabulary
   rdfs:label "Publsied by" ;             # a label we can show in the UI
   fluxSchema:inverseLabel "Publisher" ;       # if we see the link in the opposite direction we show this label
    # there is one inks between a CubesRootTree and an Vocabulary
   sh:property [
       sh:targetClass dms:CubesRoot ;                         # the source of the link (connection point Cube)
       sh:path ( [
           sh:inversePath dms:containsDataset
       ] dms:hasOwnerOrganization ) ;    # the path to follow to reach the target node (the Vacabulary)
       sh:class schema:BPGovernmentOrganization ;                        # the target class of the instance on the other side of the link
   ] .

